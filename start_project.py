#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Lovable AI Platform
"""

import os
import sys
import subprocess
import time
import threading
import webbrowser
from pathlib import Path

def check_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏—é Python"""
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} –Ω–∞–π–¥–µ–Ω")
    return True

def setup_backend():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç backend"""
    backend_dir = Path("backend")
    if not backend_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    venv_dir = Path("venv")
    if not venv_dir.exists():
        print("üì¶ –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
        subprocess.run([sys.executable, "-m", "venv", "venv"], check=True)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    subprocess.run([sys.executable, "-m", "pip", "install", "-r", "backend/requirements.txt"], check=True)
    
    print("‚úÖ Backend –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")
    return True

def start_backend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç backend —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é backend...")
    backend_dir = Path("backend")
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if backend_dir.exists():
        os.chdir(backend_dir)
    else:
        print("‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        subprocess.run([sys.executable, "app.py"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend: {e}")
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")

def start_frontend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç frontend —Å–µ—Ä–≤–µ—Ä"""
    print("üåê –ó–∞–ø—É—Å–∫–∞—é frontend...")
    os.chdir(Path.cwd().parent)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
    subprocess.run([sys.executable, "-m", "http.server", "8000"])

def open_browser():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä"""
    time.sleep(3)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    print("üåê –û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä...")
    webbrowser.open("http://localhost:8000")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üíª Lovable AI Platform")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if not check_python():
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º backend
    if not setup_backend():
        return
    
    print("\nüéØ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!")
    print("üìç Backend: http://localhost:5002")
    print("üåê Frontend: http://localhost:8000")
    print("üîå WebSocket: ws://localhost:5002")
    print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    backend_thread = threading.Thread(target=start_backend, daemon=True)
    frontend_thread = threading.Thread(target=start_frontend, daemon=True)
    browser_thread = threading.Thread(target=open_browser, daemon=True)
    
    try:
        backend_thread.start()
        time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend
        
        frontend_thread.start()
        time.sleep(1)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ frontend
        
        browser_thread.start()
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        backend_thread.join()
        frontend_thread.join()
        
    except KeyboardInterrupt:
        print("\nüëã –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–µ—Ä–≤–µ—Ä—ã...")
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main() 